- name: Set up PostgreSQL 15
  hosts: all
  become: true
  vars:
    keyring_file: /etc/apt/trusted.gpg.d/postgresql_15.gpg
  pre_tasks:
    - name: Import the repo signing key
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        keyring: "{{ keyring_file }}"
    - name: Add pg repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ keyring_file }}] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
      when: ansible_distribution == "Ubuntu"
    - name: Install apt dependencies for play
      ansible.builtin.apt:
        name: "{{ item }}"
        update_cache: yes
      loop:
        # Needed for "ansible.builtin.pip"
        - python3-pip
        - libpq-dev
        - python3-setuptools
        # Needed for "community.postgresql.postgresql_user"
        - acl
      register: pg_deps
    - name: Install pip dependencies for play
      ansible.builtin.pip:
        # Needed for "community.postgresql.postgresql_user"
        name: psycopg2
      when: pg_deps is succeeded
      register: psycop2_installed
  tasks:
    - name: Install pg
      ansible.builtin.apt:
        name: postgresql
        update_cache: yes
    - name: Start and enable services
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: yes
  post_tasks:
    - name: Add pg user
      become_user: postgres
      community.postgresql.postgresql_user:
        name: vagrant
    - name: Modify password for postgres user
      become_user: postgres
      community.postgresql.postgresql_user:
        name: postgres
        password: postgres
    - name: Create vagrant db
      become_user: postgres
      community.postgresql.postgresql_db:
        name: vagrant
      when: psycop2_installed is succeeded
    - name: Grant the right permissions for db access
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/15/main/pg_hba.conf
        contype: local
        method: trust
        create: true
        backup: true
  handlers:
    - name: Restart postgres
      ansible.builtin.service:
        name: postgresql
        state: restarted
